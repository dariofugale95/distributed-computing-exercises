apiVersion: v1
kind: Service
metadata:
  name: pycounter-backend
spec:
  ports:
    - port: 5000
  selector:
    app: pycounter-backend
---
apiVersion: v1
kind: Service
metadata:
  name: pycounter-redis
spec:
  ports:
  - port: 6379
  selector:
    app: pycounter-redis
---
apiVersion: v1
kind: Service
metadata:
  name: pycounter-frontend
spec:
  ports:
        - port: 80
  selector:
    app: pycounter-frontend
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pycounter-ingress
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Script-Name /backend;
spec:
  rules:
  - host: pycounter.localhost
    http:
      paths:
      - path: /backend
        backend:
          serviceName: pycounter-backend
          servicePort: 5000
      - path: /
        backend:
          serviceName: pycounter-frontend
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pycounter-redis
spec:
  selector:
      matchLabels:
          app: pycounter-redis
  template:
    metadata:
      labels:
        app: pycounter-redis
    spec:
      containers:
      - name: pycounter-redis
        image: pycounter-redis:v1
        ports:
        - containerPort: 6379
        volumeMounts:
            - mountPath: /data
              name: redis-volume
      volumes:
      - name: redis-volume
        hostPath:
            path: /redis-volume
            type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pycounter
spec:
  selector:
      matchLabels:
          app: pycounter-backend
  template:
    metadata:
      labels:
        app: pycounter-backend
    spec:
      containers:
      - name: pycounter-backend
        image: pycounter-stateless:v1
        ports:
        - containerPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pycounter-frontend
spec:
  selector:
      matchLabels:
          app: pycounter-frontend
  template:
    metadata:
      labels:
        app: pycounter-frontend
    spec:
      containers:
      - name: pycounter-frontend
        image: pycounter-frontend:v1
        ports:
        - containerPort: 5000

